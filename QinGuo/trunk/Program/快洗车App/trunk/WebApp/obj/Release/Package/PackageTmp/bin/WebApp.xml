<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApp</name>
    </assembly>
    <members>
        <member name="T:WebApp.IPuCode">
             <summary>
            爱普--短信验证码
             </summary>
        </member>
        <member name="M:WebApp.IPuCode.GetCode(System.String,System.Int32)">
            <summary>
            获取短信验证码实体
            </summary>
            <param name="Phone"></param>
            <param name="TypeInt"></param>
            <returns></returns>
        </member>
        <member name="M:WebApp.IPuCode.SendCode(System.String,System.String)">
            <summary>
            短信发送
            </summary>
            <param name="tel">联系电话</param>
            <param name="message">消息内容</param>
            <returns></returns>
        </member>
        <member name="T:WebApp.UCSRestRequest">
            <summary>
            短信
            </summary>
        </member>
        <member name="F:WebApp.UCSRestRequest.softVer">
            <summary>
            服务器api版本
            </summary>
        </member>
        <member name="M:WebApp.UCSRestRequest.init(System.String,System.String)">
            <summary>
            初始化函数
            </summary>
            <param name="serverIP">服务器地址</param>
            <param name="serverPort">服务器端口</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.setAccount(System.String,System.String)">
            <summary>
            设置主帐号信息
            </summary>
            <param name="accountSid">主帐号</param>
            <param name="accountToken">主帐号令牌</param>
        </member>
        <member name="M:WebApp.UCSRestRequest.setAppId(System.String)">
            <summary>
            设置应用ID
            </summary>
            <param name="appId">应用ID</param>
        </member>
        <member name="M:WebApp.UCSRestRequest.enabeLog(System.Boolean)">
            <summary>
            日志开关
            </summary>
            <param name="enable">日志开关</param>
        </member>
        <member name="M:WebApp.UCSRestRequest.GetLogPath">
            <summary>
            获取日志路径
            </summary>
            <returns>日志路径</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.QueryAccountInfo">
            <summary>
            主帐号信息查询
            </summary>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.CreateClient(System.String,System.String,System.String,System.String)">
            <summary>
            申请client帐号
            </summary>
            <param name="friendlyName">client帐号名称。</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.DropClient(System.String)">
            <summary>
            释放client帐号
            </summary>
            <param name="clientNum">client帐号</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.GetClient(System.UInt32,System.UInt32)">
            <summary>
            获取应用下client帐号
            </summary>
            <param name="startNo">开始的序号，默认从0开始</param>
            <param name="offset">一次查询的最大条数，最小是1条，最大是100条</param>
            <exception cref="T:System.ArgumentOutOfRangeException">参数超出范围</exception>
            <exception cref="T:System.Exception"></exception>
            <returns></returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.QueryClientNumber(System.String)">
            <summary>
            查询client帐号信息
            </summary>
            <param name="clientNum">client帐号</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.QueryClientMobile(System.String)">
            <summary>
            查询client信息(根据手机号)
            </summary>
            <param name="clientMobile">client帐号对应的手机号</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.GetBillList(System.String)">
            <summary>
            应用话单下载
            </summary>
            <param name="range">day 代表前一天的数据（从00:00 – 23:59）;week代表前一周的数据(周一 到周日)；month表示上一个月的数据（上个月表示当前月减1，如果今天是4月10号，则查询结果是3月份的数据）</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns></returns>
        </member>
        <!-- 对于成员“M:WebApp.UCSRestRequest.GetClientBillList(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:WebApp.UCSRestRequest.ChargeClient(System.String,System.String,System.String)">
            <summary>
            Client充值
            </summary>
            <param name="clientMobile">client帐号</param>
            <param name="chargeType">0 充值；1 回收</param>
            <param name="charge">充值或回收的金额</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.SendSMS(System.String,System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="to">短信接收端手机号码</param>
            <param name="templateId">短信模板ID</param>
            <param name="param">内容数据，用于替换模板中{数字}</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.CallBack(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            双向回呼
            </summary>
            <param name="fromClient">主叫电话</param>
            <param name="toPhone">被叫电话</param>
            <param name="fromSerNum">主叫侧显示的号码，只能显示400号码或固话。</param>
            <param name="toSerNum">被叫侧显示的号码。可显示手机号码、400号码或固话。</param>
            <param name="maxallowtime">被叫侧显示的号码。可显示手机号码、400号码或固话。</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns>包体内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.VoiceCode(System.String,System.String)">
            <summary>
            语音验证码
            </summary>
            <param name="to">接收号码</param>
            <param name="verifyCode">验证码内容，为数字0~9，长度4-8位</param>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
            <exception cref="T:System.Exception"></exception>
            <returns></returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.MD5Encrypt(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="source">原内容</param>
            <returns>加密后内容</returns>
        </member>
        <member name="M:WebApp.UCSRestRequest.setCertificateValidationCallBack">
            <summary>
            设置服务器证书验证回调
            </summary>
        </member>
        <member name="M:WebApp.UCSRestRequest.CertificateValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
             证书验证回调函数  
            </summary>
            <param name="obj"></param>
            <param name="cer"></param>
            <param name="chain"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="T:WebApp.WxPayConfig">
            配置账号信息
        </member>
        <member name="T:WebApp.WxPayData">
            <summary>
            微信支付协议接口数据类，所有的API接口通信都依赖这个数据结构，
            在调用接口之前先填充各个字段的值，然后进行接口通信，
            这样设计的好处是可扩展性强，用户可随意对协议进行更改而不用重新设计数据结构，
            还可以随意组合出不同的协议数据包，不用为每个协议设计一个数据包结构
            </summary>
        </member>
        <member name="M:WebApp.WxPayData.SetValue(System.String,System.Object)">
                    * 设置某个字段的值
                    * @param key 字段名
                     * @param value 字段值
        </member>
        <member name="M:WebApp.WxPayData.GetValue(System.String)">
                    * 根据字段名获取某个字段的值
                    * @param key 字段名
                     * @return key对应的字段值
        </member>
        <member name="M:WebApp.WxPayData.IsSet(System.String)">
            判断某个字段是否已设置
            @param key 字段名
            @return 若字段key已被设置，则返回true，否则返回false
        </member>
        <member name="M:WebApp.WxPayData.ToXml">
             @将Dictionary转成xml
             @return 经转换得到的xml串
             @throws WxPayException
            
        </member>
        <member name="M:WebApp.WxPayData.FromXml(System.String)">
            @将xml转为WxPayData对象并返回对象内部的数据
            @param string 待转换的xml串
            @return 经转换得到的Dictionary
            @throws WxPayException
        </member>
        <member name="M:WebApp.WxPayData.ToUrl">
            @Dictionary格式转化成url参数格式
            @ return url格式串, 该串不包含sign字段值
        </member>
        <member name="M:WebApp.WxPayData.ToJson">
                    * @Dictionary格式化成Json
                     * @return json串数据
        </member>
        <member name="M:WebApp.WxPayData.ToPrintStr">
            @values格式化成能在Web页面上显示的结果（因为web页面上不能直接输出xml格式的字符串）
        </member>
        <member name="M:WebApp.WxPayData.MakeSign">
            @生成签名，详见签名生成算法
            @return 签名, sign字段不参加签名
        </member>
        <member name="M:WebApp.WxPayData.CheckSign">
            
            检测签名是否正确
            正确返回true，错误抛异常
        </member>
        <member name="M:WebApp.WxPayData.GetValues">
            @获取Dictionary
        </member>
        <member name="T:WebApp.HttpService">
            <summary>
            http连接基础类，负责底层的http通信
            </summary>
        </member>
        <member name="M:WebApp.HttpService.Get(System.String)">
            <summary>
            处理http GET请求，返回数据
            </summary>
            <param name="url">请求的url地址</param>
            <returns>http GET成功后返回的数据，失败抛WebException异常</returns>
        </member>
        <member name="M:WebApp.Log.Debug(System.String,System.String)">
            向日志文件写入调试信息
            @param className 类名
            @param content 写入内容
        </member>
        <member name="M:WebApp.Log.Info(System.String,System.String)">
            向日志文件写入运行时信息
            @param className 类名
            @param content 写入内容
        </member>
        <member name="M:WebApp.Log.Error(System.String,System.String)">
            向日志文件写入出错信息
            @param className 类名
            @param content 写入内容
        </member>
        <member name="M:WebApp.Log.WriteLog(System.String,System.String,System.String)">
            实际的写日志操作
            @param type 日志记录类型
            @param className 类名
            @param content 写入内容
        </member>
        <member name="T:WebApp.Notify">
            <summary>
            回调处理基类
            主要负责接收微信支付后台发送过来的数据，对数据进行签名验证
            子类在此类基础上进行派生并重写自己的回调处理过程
            </summary>
        </member>
        <member name="M:WebApp.Notify.GetNotifyData">
            <summary>
            接收从微信支付后台发送过来的数据并验证签名
            </summary>
            <returns>微信支付后台返回的数据</returns>
        </member>
        <member name="P:WebApp.JsApiPay.page">
            <summary>
            保存页面对象，因为要在类的方法中使用Page的Request对象
            </summary>
        </member>
        <member name="P:WebApp.JsApiPay.openid">
            <summary>
            openid用于调用统一下单接口
            </summary>
        </member>
        <member name="P:WebApp.JsApiPay.access_token">
            <summary>
            access_token用于获取收货地址js函数入口参数
            </summary>
        </member>
        <member name="P:WebApp.JsApiPay.total_fee">
            <summary>
            商品金额，用于统一下单
            </summary>
        </member>
        <member name="P:WebApp.JsApiPay.unifiedOrderResult">
            <summary>
            统一下单接口返回结果
            </summary>
        </member>
        <member name="M:WebApp.JsApiPay.GetOpenidAndAccessToken">
            
            网页授权获取用户基本信息的全部过程
            详情请参看网页授权获取用户基本信息：http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html
            第一步：利用url跳转获取code
            第二步：利用code去获取openid和access_token
            
        </member>
        <member name="M:WebApp.JsApiPay.GetOpenidAndAccessTokenFromCode(System.String)">
            	    * 
            	    * 通过code换取网页授权access_token和openid的返回数据，正确时返回的JSON数据包如下：
            	    * {
            	    *  "access_token":"ACCESS_TOKEN",
            	    *  "expires_in":7200,
            	    *  "refresh_token":"REFRESH_TOKEN",
            	    *  "openid":"OPENID",
            	    *  "scope":"SCOPE",
            	    *  "unionid": "o6_bmasdasdsad6_2sgVt7hMZOPfL"
            	    * }
            	    * 其中access_token可用于获取共享收货地址
            	    * openid是微信支付jsapi支付接口统一下单时必须的参数
                    * 更详细的说明请参考网页授权获取用户基本信息：http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html
                    * @失败时抛异常WxPayException
        </member>
        <member name="M:WebApp.JsApiPay.GetUnifiedOrderResult">
            调用统一下单，获得下单结果
            @return 统一下单结果
            @失败时抛异常WxPayException
        </member>
        <member name="M:WebApp.JsApiPay.GetJsApiParameters">
             
            从统一下单成功返回的数据中获取微信浏览器调起jsapi支付所需的参数，
            微信浏览器调起JSAPI时的输入参数格式如下：
            {
              "appId" : "wx2421b1c4370ec43b",     //公众号名称，由商户传入     
              "timeStamp":" 1395712654",         //时间戳，自1970年以来的秒数     
              "nonceStr" : "e61463f8efa94090b1f366cccfbbb444", //随机串     
              "package" : "prepay_id=u802345jgfjsdfgsdg888",     
              "signType" : "MD5",         //微信签名方式:    
              "paySign" : "70EA570631E4BB79628FBCA90534C63FF7FADD89" //微信签名 
            }
            @return string 微信浏览器调起JSAPI时的输入参数，json格式可以直接做参数用
            更详细的说明请参考网页端调起支付API：http://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7
            
        </member>
        <member name="M:WebApp.JsApiPay.GetEditAddressParameters">
            
            获取收货地址js函数入口参数,详情请参考收货地址共享接口：http://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_9
            @return string 共享收货地址js函数需要的参数，json格式可以直接做参数使用
        </member>
        <member name="M:WebApp.MicroPay.Run(System.String,System.String,System.String)">
            刷卡支付完整业务流程逻辑
            @param body 商品描述
            @param total_fee 总金额
            @param auth_code 支付授权码
            @throws WxPayException
            @return 刷卡支付结果
        </member>
        <member name="M:WebApp.MicroPay.Query(System.String,System.Int32@)">
            
            查询订单情况
            @param string out_trade_no  商户订单号
            @param int succCode         查询订单结果：0表示订单不成功，1表示订单成功，2表示继续查询
            @return 订单查询接口返回的数据，参见协议接口
        </member>
        <member name="M:WebApp.MicroPay.Cancel(System.String,System.Int32)">
            	    * 
            	    * 撤销订单，如果失败会重复调用10次
            	    * @param string out_trade_no 商户订单号
            	    * @param depth 调用次数，这里用递归深度表示
                    * @return false表示撤销失败，true表示撤销成功
        </member>
        <member name="T:WebApp.NativeNotify">
            <summary>
            扫码支付模式一回调处理类
            接收微信支付后台发送的扫码结果，调用统一下单接口并将下单结果返回给微信支付后台
            </summary>
        </member>
        <member name="M:WebApp.NativePay.GetPrePayUrl(System.String)">
            生成扫描支付模式一URL
            @param productId 商品ID
            @return 模式一URL
        </member>
        <member name="M:WebApp.NativePay.GetPayUrl(System.String)">
            生成直接支付url，支付url有效期为2小时,模式二
            @param productId 商品ID
            @return 模式二URL
        </member>
        <member name="M:WebApp.NativePay.ToUrlParams(System.Collections.Generic.SortedDictionary{System.String,System.Object})">
            参数数组转换为url格式
            @param map 参数名与参数值的映射表
            @return URL字符串
        </member>
        <member name="T:WebApp.ResultNotify">
            <summary>
            支付结果通知回调处理类
            负责接收微信支付后台发送的支付结果并对订单有效性进行验证，将验证结果反馈给微信支付后台
            </summary>
        </member>
        <member name="M:WebApp.WxPayApi.Micropay(WebApp.WxPayData,System.Int32)">
            提交被扫支付API
            收银员使用扫码设备读取微信用户刷卡授权码以后，二维码或条码信息传送至商户收银台，
            由商户收银台或者商户后台调用该接口发起支付。
            @param WxPayData inputObj 提交给被扫支付API的参数
            @param int timeOut 超时时间
            @throws WxPayException
            @return 成功时返回调用结果，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.OrderQuery(WebApp.WxPayData,System.Int32)">
               
            查询订单
            @param WxPayData inputObj 提交给查询订单API的参数
            @param int timeOut 超时时间
            @throws WxPayException
            @return 成功时返回订单查询结果，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.Reverse(WebApp.WxPayData,System.Int32)">
            
            撤销订单API接口
            @param WxPayData inputObj 提交给撤销订单API接口的参数，out_trade_no和transaction_id必填一个
            @param int timeOut 接口超时时间
            @throws WxPayException
            @return 成功时返回API调用结果，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.Refund(WebApp.WxPayData,System.Int32)">
            
            申请退款
            @param WxPayData inputObj 提交给申请退款API的参数
            @param int timeOut 超时时间
            @throws WxPayException
            @return 成功时返回接口调用结果，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.RefundQuery(WebApp.WxPayData,System.Int32)">
            
            查询退款
            提交退款申请后，通过该接口查询退款状态。退款有一定延时，
            用零钱支付的退款20分钟内到账，银行卡支付的退款3个工作日后重新查询退款状态。
            out_refund_no、out_trade_no、transaction_id、refund_id四个参数必填一个
            @param WxPayData inputObj 提交给查询退款API的参数
            @param int timeOut 接口超时时间
            @throws WxPayException
            @return 成功时返回，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.DownloadBill(WebApp.WxPayData,System.Int32)">
            下载对账单
            @param WxPayData inputObj 提交给下载对账单API的参数
            @param int timeOut 接口超时时间
            @throws WxPayException
            @return 成功时返回，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.ShortUrl(WebApp.WxPayData,System.Int32)">
            
            转换短链接
            该接口主要用于扫码原生支付模式一中的二维码链接转成短链接(weixin://wxpay/s/XXXXXX)，
            减小二维码数据量，提升扫描速度和精确度。
            @param WxPayData inputObj 提交给转换短连接API的参数
            @param int timeOut 接口超时时间
            @throws WxPayException
            @return 成功时返回，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.UnifiedOrder(WebApp.WxPayData,System.Int32)">
            
            统一下单
            @param WxPaydata inputObj 提交给统一下单API的参数
            @param int timeOut 超时时间
            @throws WxPayException
            @return 成功时返回，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.CloseOrder(WebApp.WxPayData,System.Int32)">
            
            关闭订单
            @param WxPayData inputObj 提交给关闭订单API的参数
            @param int timeOut 接口超时时间
            @throws WxPayException
            @return 成功时返回，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.ReportCostTime(System.String,System.Int32,WebApp.WxPayData)">
            
            测速上报
            @param string interface_url 接口URL
            @param int timeCost 接口耗时
            @param WxPayData inputObj参数数组
        </member>
        <member name="M:WebApp.WxPayApi.Report(WebApp.WxPayData,System.Int32)">
            
            测速上报接口实现
            @param WxPayData inputObj 提交给测速上报接口的参数
            @param int timeOut 测速上报接口超时时间
            @throws WxPayException
            @return 成功时返回测速上报接口返回的结果，其他抛异常
        </member>
        <member name="M:WebApp.WxPayApi.GenerateOutTradeNo">
                    * 根据当前系统时间加随机序列来生成订单号
                     * @return 订单号
        </member>
        <member name="M:WebApp.WxPayApi.GenerateTimeStamp">
                    * 生成时间戳，标准北京时间，时区为东八区，自1970年1月1日 0点0分0秒以来的秒数
                     * @return 时间戳
        </member>
        <member name="M:WebApp.WxPayApi.GenerateNonceStr">
            生成随机串，随机串包含字母或数字
            @return 随机串
        </member>
        <member name="P:WebApp.H5Pay.unifiedOrderResult">
            <summary>
            统一下单接口返回结果
            </summary>
        </member>
        <member name="M:WebApp.H5Pay.GetUnifiedOrderResult(WebApp.WxPayData)">
            调用统一下单，获得下单结果
            @return 统一下单结果
            @失败时抛异常WxPayException
        </member>
        <member name="T:WebApp.Controllers.HomeController">
            <summary>
            App接口集成
            </summary>
        </member>
        <member name="T:WebApp.Controllers.WashCarApiController">
            <summary>
            集成
            </summary>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.register(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            注册维修厂账号
            </summary>
            <param name="account">登录名</param>
            <param name="phone">联系电话</param>
            <param name="pwd">密码</param>
            <param name="CommpanyName">维修厂名</param>
            <param name="MobileCode">机器码</param>
            <param name="code">短信验证码(口令：102913)</param>
            <param name="PaltForm">注册平台(1:苹果 2:安卓 3:网页)</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.login(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            维修厂 汽配商 账号密码登录
            </summary>
            <param name="loginname">用户名</param>
            <param name="pwd">密码</param>
            <param name="BDChannelId">百度推送id</param>
            <param name="BDUserId">百度推送用户id</param>
            <param name="MobileCode">机器码</param>
            <param name="PaltForm">登录平台(1:苹果 2:安卓 3:网页)</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.loginE(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            汽车用户手机验证码 登录
            </summary>
            <param name="loginname">手机号</param>
            <param name="code">短信验证码(口令：102913)</param>
            <param name="BDChannelId">百度推送id</param>
            <param name="BDUserId">百度推送用户id</param>
            <param name="MobileCode">机器码</param>
            <param name="PaltForm">登录平台(1:苹果 2:安卓 3:网页)</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.registerVali(System.String)">
            <summary>
            注册前手机验证是否注册
            </summary>
            <param name="phone">手机号</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.sendCode(System.String,System.Int32)">
            <summary>
            获取验证码
            </summary>
            <param name="phone">手机号</param>
            <param name="type">类型（0：登录，1：注册，2：找回密码）</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.loginOut">
            <summary>
            注销 
            </summary>
            <param name="Authorization">token</param>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getUserInfo">
            <summary>
            获取用户详情
            </summary>
            <param name="Authorization">token</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.autoLogin(System.String)">
            <summary>
            自动登录接口
            </summary>
            <param name="uid">token</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.uploadhimg">
            <summary>
            上传头像
            </summary>
            <param name="Authorization">token</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.forgetemailPwd(System.String,System.String)">
            <summary>
            忘记密码，邮件找回
            </summary>
            <param name="account">用户账号</param>
            <param name="email">找回邮箱</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.forgetcodePwd(System.String,System.String)">
            <summary>
            忘记密码，短信找回
            </summary>
            <param name="account">用户账号</param>
            <param name="code">找回验证码</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.updateUserPwd(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="Authorization">token</param>
            <param name="pwd">新密码</param>
            <param name="oldpwd">旧密码</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.updateUser(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            修改用户信息
            </summary>
            <param name="Authorization">token</param>
            <param name="name">名称</param>
            <param name="email">邮箱</param>
            <param name="sex">性别0: 男 1:女</param>
            <param name="age">年龄</param>
            <param name="cname">商家</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.checkVersion(System.String,System.String)">
            <summary>
            version 版本下载安装包
            </summary>
            <param name="phonetype">平台(1:苹果 2:安卓)</param>
            <param name="version">version 版本号</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.saveFeedback(System.String,System.String)">
            <summary>
            意见反馈
            </summary>
            <param name="Authorization">token</param>
            <param name="backinfo">意见反馈内容</param>
            <param name="phonetype">平台(1:苹果 2:安卓 3:网页)</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getRemarkSetting(System.String)">
            <summary>
            注册协议、关于我们
            </summary>
            <param name="id">1:册协议、2:关于我们</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.upimg">
            <summary>
            上传图片()
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.upvoice">
            <summary>
            上传语音
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getcity">
            <summary>
            获取开通城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.WashCar(System.String)">
            <summary>
            查询汽车 洗车有效数据
            </summary>
            <param name="carid">汽车id</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.addWashCar">
            <summary>
            启动APP 添加洗车记录接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.addCarOrder(System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            提交申请维保信息
            </summary>
            <param name="LicensePlate">车牌号</param>
            <param name="Type">汽车品牌id</param>
            <param name="TypeName">品牌名称</param>
            <param name="Name">维保项目名称</param>
            <param name="TermOfValidity">维保天数</param>
            <param name="Remarks">备注</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getCarOrder(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取申请维保列表
            </summary>
            <param name="carno">车牌号</param>
            <param name="applydate">申请时间 yyyy-mm-dd</param>
            <param name="status">申请状态(删除 = -1, 待审核 = 0,审核通过 = 1,审核不通过 = 2,查询所以传 -2,审核通过,审核不通过=-3)</param>
            <param name="pageno">第几页</param>
            <param name="pagesize">分页大小</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getCarOrderDetail(System.String)">
            <summary>
            获取申请维保详细信息
            </summary>
            <param name="orderid">车牌号</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.upCarOrder(System.String,System.Int32,System.String)">
            <summary>
            审核维保信息
            </summary>
            <param name="orderid">申请id</param>
            <param name="status">审核状态(0:待审核，1：审核通过，2：审核不通过)</param>
            <param name="auditorRemarks">备注</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.addCar(System.String,System.String,System.String)">
            <summary>
            添加汽车信息
            </summary>
            <param name="LicensePlate">车牌号</param>
            <param name="Type">汽车品牌id</param>
            <param name="TypeName">品牌名称</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.delCar(System.String)">
            <summary>
            解除绑定车辆汽车信息
            </summary>
            <param name="CarId">车Id</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getCars">
            <summary>
            获取我的汽车
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getCar(System.String)">
            <summary>
            根据车牌查询汽车信息
            </summary>
            <param name="LicensePlate">车牌号</param>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getGroup">
            <summary>
            维保项目
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getCategory">
            <summary>
            获取品牌
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.getCarEquipment">
            <summary>
            获取洗车站点
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApp.Controllers.WashCarApiController.addCarEquipment(System.String,System.String,System.String,System.String)">
            <summary>
            添加洗车站点
            </summary>
            <param name="Name">站点名称</param>
            <param name="Addr">站点地址</param>
            <param name="ComPLon">所在位置经度</param>
            <param name="CompLat">所在位置纬度</param>
            <returns></returns>
        </member>
        <member name="T:WebApp.App">
            <summary>
            App信息
            </summary>
        </member>
        <member name="P:WebApp.App.Id">
            <summary>
            App的ID号
            </summary>
        </member>
        <member name="P:WebApp.App.Name">
            <summary>
            App的名称
            </summary>
        </member>
        <member name="P:WebApp.App.Remark">
            <summary>
            App的说明
            </summary>
        </member>
        <member name="P:WebApp.App.Date">
            <summary>
            App的说明
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.id">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.loginname">
            <summary>
            登录名称
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.name">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.phone">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.headimg">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.sex">
            <summary>
            用户性别
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.email">
            <summary>
            用户邮箱
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.numcollcet">
            <summary>
            用户收藏数量
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.ismember">
            <summary>
            用户是否是会员
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.cname">
            <summary>
            商家
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.createrId">
            <summary>
            创建者id
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.cid">
            <summary>
            公司id
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.usertype">
            <summary>
            用户类型
            总管理 = 100,//后台系统登录账号 汽配商 = 101,//汽配商 维修厂 = 102,//维修厂 车主 = 103,//车主
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.token">
            <summary>
            token
            </summary>
        </member>
        <member name="P:WebApp.JsonUser.timeout">
            <summary>
            token 过期时效
            </summary>
        </member>
        <member name="M:WebApp.CachingSwaggerProvider.GetControllerDesc">
            <summary>
            从API文档中读取控制器描述
            </summary>
            <returns>所有控制器描述</returns>
        </member>
        <member name="T:WebApp.MyJsonResult`1">
            <summary>
            数据返回类
            </summary>
        </member>
        <member name="F:WebApp.MyJsonResult`1._success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="F:WebApp.MyJsonResult`1._msg">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:WebApp.MyJsonResult`1._nowdate">
            <summary>
            当前服务器时间
            </summary>
        </member>
        <member name="F:WebApp.MyJsonResult`1._errorcode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="F:WebApp.MyJsonResult`1._data">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="F:WebApp.MyJsonResult`1._otherMsg">
            <summary>
            其他信息
            </summary>
        </member>
    </members>
</doc>
