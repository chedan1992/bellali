/*
*注意要点:
*1:系统中采用top.的方法获取控件值是因为系统采用Iframe开发方式,通过top.的方法可以让弹框弹出Iframe以外,看起来像一个整体,当然获取值也就只能用top.的方式获取控件值. 如:top.Ext.getCmp("id")
*2:系统母版页引用common.js,系统所以的方法都会调用common.js,所以通用,共有的方法可以放在这里面,方便调用管理.
*3:登录开发者账号,进行按钮配置后,按钮的方法需要在common.js里定义,不然系统就会报错.
*/
var Ajax; //封装、简化AJAX
var loginError = '/Temple/LoginError'; //用户信息过期跳转页面
var LoginUser = null; //存储用户信息
var searchData = [];  //搜索条件数据
var theme = "gtp-blue.css"; //默认系统主题
var treeNodeId = -1; //针对系统弹框时,左边树形,右边grid,点击树形时候,用来记住tree点击的id
var TopLabel = false; //工具条上是否加文本
var DistinBar = 0; //是否自定义工具条  2:箱子管理
var url = ''; //记录表单编辑或新增的地址
var HasSave = true; //判断新增页面是否点击保存
// 汉字拼音首字母列表 本列表包含了20902个汉字,用于配合 ToChineseSpell 
//函数使用,本表收录的字符的Unicode编码范围为19968至40869, XDesigner 整理
var strChineseFirstPY = "";
//此处收录了375个多音字,数据来自于http://www.51window.net/page/pinyin
var oMultiDiff = { "19969": "DZ", "19975": "WM", "19988": "QJ", "20048": "YL", "20056": "SC", "20060": "NM", "20094": "QG", "20127": "QJ", "20167": "QC", "20193": "YG", "20250": "KH", "20256": "ZC", "20282": "SC", "20285": "QJG", "20291": "TD", "20314": "YD", "20340": "NE", "20375": "TD", "20389": "YJ", "20391": "CZ", "20415": "PB", "20446": "YS", "20447": "SQ", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20504": "TC", "20608": "KG", "20854": "QJ", "20857": "ZC", "20911": "PF", "20985": "AW", "21032": "PB", "21048": "XQ", "21049": "SC", "21089": "YS", "21119": "JC", "21242": "SB", "21273": "SC", "21305": "YP", "21306": "QO", "21330": "ZC", "21333": "SDC", "21345": "QK", "21378": "CA", "21397": "SC", "21414": "XS", "21442": "SC", "21477": "JG", "21480": "TD", "21484": "ZS", "21494": "YX", "21505": "YX", "21512": "HG", "21523": "XH", "21537": "PB", "21542": "PF", "21549": "KH", "21571": "E", "21574": "DA", "21588": "TD", "21589": "O", "21618": "ZC", "21621": "KHA", "21632": "ZJ", "21654": "KG", "21679": "LKG", "21683": "KH", "21710": "A", "21719": "YH", "21734": "WOE", "21769": "A", "21780": "WN", "21804": "XH", "21834": "A", "21899": "ZD", "21903": "RN", "21908": "WO", "21939": "ZC", "21956": "SA", "21964": "YA", "21970": "TD", "22003": "A", "22031": "JG", "22040": "XS", "22060": "ZC", "22066": "ZC", "22079": "MH", "22129": "XJ", "22179": "XA", "22237": "NJ", "22244": "TD", "22280": "JQ", "22300": "YH", "22313": "XW", "22331": "YQ", "22343": "YJ", "22351": "PH", "22395": "DC", "22412": "TD", "22484": "PB", "22500": "PB", "22534": "ZD", "22549": "DH", "22561": "PB", "22612": "TD", "22771": "KQ", "22831": "HB", "22841": "JG", "22855": "QJ", "22865": "XQ", "23013": "ML", "23081": "WM", "23487": "SX", "23558": "QJ", "23561": "YW", "23586": "YW", "23614": "YW", "23615": "SN", "23631": "PB", "23646": "ZS", "23663": "ZT", "23673": "YG", "23762": "TD", "23769": "ZS", "23780": "QJ", "23884": "QK", "24055": "XH", "24113": "DC", "24162": "ZC", "24191": "GA", "24273": "QJ", "24324": "NL", "24377": "TD", "24378": "QJ", "24439": "PF", "24554": "ZS", "24683": "TD", "24694": "WE", "24733": "LK", "24925": "TN", "25094": "ZG", "25100": "XQ", "25103": "XH", "25153": "PB", "25170": "PB", "25179": "KG", "25203": "PB", "25240": "ZS", "25282": "FB", "25303": "NA", "25324": "KG", "25341": "ZY", "25373": "WZ", "25375": "XJ", "25384": "A", "25457": "A", "25528": "SD", "25530": "SC", "25552": "TD", "25774": "ZC", "25874": "ZC", "26044": "YW", "26080": "WM", "26292": "PB", "26333": "PB", "26355": "ZY", "26366": "CZ", "26397": "ZC", "26399": "QJ", "26415": "ZS", "26451": "SB", "26526": "ZC", "26552": "JG", "26561": "TD", "26588": "JG", "26597": "CZ", "26629": "ZS", "26638": "YL", "26646": "XQ", "26653": "KG", "26657": "XJ", "26727": "HG", "26894": "ZC", "26937": "ZS", "26946": "ZC", "26999": "KJ", "27099": "KJ", "27449": "YQ", "27481": "XS", "27542": "ZS", "27663": "ZS", "27748": "TS", "27784": "SC", "27788": "ZD", "27795": "TD", "27812": "O", "27850": "PB", "27852": "MB", "27895": "SL", "27898": "PL", "27973": "QJ", "27981": "KH", "27986": "HX", "27994": "XJ", "28044": "YC", "28065": "WG", "28177": "SM", "28267": "QJ", "28291": "KH", "28337": "ZQ", "28463": "TL", "28548": "DC", "28601": "TD", "28689": "PB", "28805": "JG", "28820": "QG", "28846": "PB", "28952": "TD", "28975": "ZC", "29100": "A", "29325": "QJ", "29575": "SL", "29602": "FB", "30010": "TD", "30044": "CX", "30058": "PF", "30091": "YSP", "30111": "YN", "30229": "XJ", "30427": "SC", "30465": "SX", "30631": "YQ", "30655": "QJ", "30684": "QJG", "30707": "SD", "30729": "XH", "30796": "LG", "30917": "PB", "31074": "NM", "31085": "JZ", "31109": "SC", "31181": "ZC", "31192": "MLB", "31293": "JQ", "31400": "YX", "31584": "YJ", "31896": "ZN", "31909": "ZY", "31995": "XJ", "32321": "PF", "32327": "ZY", "32418": "HG", "32420": "XQ", "32421": "HG", "32438": "LG", "32473": "GJ", "32488": "TD", "32521": "QJ", "32527": "PB", "32562": "ZSQ", "32564": "JZ", "32735": "ZD", "32793": "PB", "33071": "PF", "33098": "XL", "33100": "YA", "33152": "PB", "33261": "CX", "33324": "BP", "33333": "TD", "33406": "YA", "33426": "WM", "33432": "PB", "33445": "JG", "33486": "ZN", "33493": "TS", "33507": "QJ", "33540": "QJ", "33544": "ZC", "33564": "XQ", "33617": "YT", "33632": "QJ", "33636": "XH", "33637": "YX", "33694": "WG", "33705": "PF", "33728": "YW", "33882": "SR", "34067": "WM", "34074": "YW", "34121": "QJ", "34255": "ZC", "34259": "XL", "34425": "JH", "34430": "XH", "34485": "KH", "34503": "YS", "34532": "HG", "34552": "XS", "34558": "YE", "34593": "ZL", "34660": "YQ", "34892": "XH", "34928": "SC", "34999": "QJ", "35048": "PB", "35059": "SC", "35098": "ZC", "35203": "TQ", "35265": "JX", "35299": "JX", "35782": "SZ", "35828": "YS", "35830": "E", "35843": "TD", "35895": "YG", "35977": "MH", "36158": "JG", "36228": "QJ", "36426": "XQ", "36466": "DC", "36710": "JC", "36711": "ZYG", "36767": "PB", "36866": "SK", "36951": "YW", "37034": "YX", "37063": "XH", "37218": "ZC", "37325": "ZC", "38063": "PB", "38079": "TD", "38085": "QY", "38107": "DC", "38116": "TD", "38123": "YD", "38224": "HG", "38241": "XTC", "38271": "ZC", "38415": "YE", "38426": "KH", "38461": "YD", "38463": "AE", "38466": "PB", "38477": "XJ", "38518": "YT", "38551": "WK", "38585": "ZC", "38704": "XS", "38739": "LJ", "38761": "GJ", "38808": "SQ", "39048": "JG", "39049": "XJ", "39052": "HG", "39076": "CZ", "39271": "XT", "39534": "TD", "39552": "TD", "39584": "PB", "39647": "SB", "39730": "LG", "39748": "TPB", "40109": "ZQ", "40479": "ND", "40516": "HG", "40536": "HG", "40583": "QJ", "40765": "YQ", "40784": "QJ", "40840": "YK", "40863": "QJG" };

/*身份证校验 杜成强  欢迎补充*/
var powers = new Array("7", "9", "10", "5", "8", "4", "2", "1", "6", "3", "7", "9", "10", "5", "8", "4", "2");
var parityBit = new Array("1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2");
//校验身份证号码的主调用    
function validId(obj) {
    var _id = obj.getValue();
    if (_id == "") return;
    var _valid = false;
    if (_id.length == 15) {
        _valid = validId15(_id);
    } else if (_id.length == 18) {
        _valid = validId18(_id);
    }
    if (!_valid) {
        top.Ext.Msg.show({ title: "信息提示", msg: "请输入有效的身份证号码信息！", buttons: Ext.Msg.OK, icon: Ext.MessageBox.INFO });
        obj.setValue("");
        return;
    }
}
//校验18位的身份证号码    
function validId18(_id) {
    _id = _id + "";
    var _num = _id.substr(0, 17);
    var _parityBit = _id.substr(17);
    var _power = 0;
    for (var i = 0; i < 17; i++) {
        //校验每一位的合法性    
        if (_num.charAt(i) < '0' || _num.charAt(i) > '9') {
            return false;
            break;
        } else {
            //加权    
            _power += parseInt(_num.charAt(i)) * parseInt(powers[i]);
        }
    }
    //取模    
    var mod = parseInt(_power) % 11;
    if (parityBit[mod] == _parityBit) {
        return true;
    }
    return false;
}
//校验15位的身份证号码    
function validId15(_id) {
    _id = _id + "";
    for (var i = 0; i < _id.length; i++) {
        //校验每一位的合法性    

        if (_id.charAt(i) < '0' || _id.charAt(i) > '9') {
            return false;
            break;
        }
    }
    var year = _id.substr(6, 2);
    var month = _id.substr(8, 2);
    var day = _id.substr(10, 2);
    var sexBit = _id.substr(14);
    //校验年份位    

    if (year < '01' || year > '90') return false;
    //校验月份    

    if (month < '01' || month > '12') return false;
    //校验日    

    if (day < '01' || day > '31') return false;

    return true;
}
Ext.onReady(function () {
    /*
    * ================ 引入加载项 =======================
    */
    //占位图片
    Ext.BLANK_IMAGE_URL = "../../Content/Extjs/resources/images/default/s.gif";
    Ext.form.Field.prototype.msgTarget = 'side'; //提示的方式，枚举值为"qtip","title","under","side"
    Ext.QuickTips.init();

    Ajax = function (config) {
        Ext.Ajax.request({
            url: config.url, //请求地址
            params: [{}], //请求参数
            method: 'post', //方法
            callback: function (options, success, response) {
                config.callback(Ext.util.JSON.decode(response.responseText));
                //调用回调函数
            }
        });
        return false;
    };

    ChangeTheme();

});

//初始化加载皮肤样式
function ChangeTheme() {
    var cook = getCookie();
    if (cook) {
        theme = theme; //  cook;
    }

    //SetThemeBaner(); //设置主题Baner

    var link = $('#frameThemes');

    if (link.length > 0) {
        link.attr('href', '../../Content/Extjs/resources/css/' + theme);
    }
    else {
        using('../../Content/Extjs/resources/css/' + theme, null, "frameThemes", iContents);
    }

    //改变框架内的样式
    var iframe = $("iframe[id='frame_content']");
    if (iframe.length > 0) {
        for (var i = 0; i < iframe.length; i++) {
            var iContents = iframe.contents(i);
            link = iContents.find('#frameThemes');
            if (link.length > 0) {
                link.attr('href', '../../Content/Extjs/resources/css/' + theme);
            }
            else {
                using('../../Content/Extjs/resources/css/' + theme, null, "frameThemes", iContents);
            }
        }
    }
}

//设置主题Baner
function SetThemeBaner() {
    //设置baner
    var src = '';
    if (theme.indexOf('all') > -1) {//浅蓝色主题
        src = '../../Resource/Img/blueBaner.png';
    }
    else if (theme.indexOf('gray') > -1) {//浅灰色主题
        src = '../../Resource/Img/blueBaner.png';
    }
    else {
        src = '../../Resource/Img/blueBaner.png';
    }
    if (Ext.getCmp("ThemeBaner")) {
        Ext.getCmp("ThemeBaner").getEl().dom.src = src;
        Ext.getCmp("ShareNorth").doLayout();
    }

}

//取cookies函数
function getCookie() {
    //获取皮肤cookie
    var doc = document;
    if (window.parent) { //iframe 取主框架里面的 cookie
        doc = window.parent.document;
    }

    var cookieArr = doc.cookie.split(";");
    var css = null;
    for (var i = 0; i < cookieArr.length; i++) {
        var arr = cookieArr[i].split("=");
        if (arr[0] == "css") {
            css = arr[1];
            break;
        }
    };
    return css;
}

//列表框中的消息提示--我知道了
function SetInfo() {
    Ext.getCmp("infoPanel").hide();
    Ext.getCmp("viewport").doLayout();
}

//获取用户信息
function getLoginUser() {
    if (LoginUser) {
        return LoginUser;
    }
    else {
        if (parent) {
            if (parent.LoginUser) {
                LoginUser = parent.LoginUser;
                return LoginUser;
            }
        }
    }
    return null;
}

//---------------------------------------------------  
// 日期格式化  
// 格式 YYYY/yyyy/YY/yy 表示年份  
// MM/M 月份  
// W/w 星期  
// dd/DD/d/D 日期  
// hh/HH/h/H 时间  
// mm/m 分钟  
// ss/SS/s/S 秒  
//---------------------------------------------------  
//格式化时间
function formartTime(val) {
    if (val == null) {
        return null;
    }
    val = val.replace(/-/g, "/");
    var date = new Date(val);
    return date;
    //var d = new Date();
    //var str = val.toString();
    //var str1 = str.replace("/Date(", "");
    //var str2 = str1.replace(")/", "");
    //var dd = parseInt(str2);
    //d.setTime(dd); return d;


    //    if (val == null) {
    //        return null;
    //    }
    //    var d = new Date();
    //    var str = val.toString();
    //    var str1 = str.replace("/Date(", "");
    //    var str2 = str1.replace(")/", "");
    //    var dd = parseInt(str2);
    //    d.setTime(dd); return d;
};

////渲染性别(0:男 1:女)
function formartSex(val) {
    if (val == "1") {
        return "女";
    }
    else {
        return "男";
    }
}

//渲染类型
function formartOrderType(val, row, record, rowIndex, columnIndex, store) {
    switch (val) {
        case 1:
            return "加班";
            break;
        case 2:
            return "请假";
            break;
        case 3:
            return "换班";
            break;
        case 0:
            return "D 项";
            break;
    }
}

//电梯类型
function ElevatorType(val, row, record, rowIndex, columnIndex, store) {
    switch (parseInt(val)) {
        case 1:
            return "有机房乘客电梯";
            break;
        case 2:
            return "无机房乘客电梯";
            break;
        case 3:
            return "有机房货梯";
            break;
        case 4:
            return "无机房货梯";
            break;
        case 5:
            return "有机房观光电梯";
            break;
        case 6:
            return "无机房观光电梯";
            break;
        case 7:
            return "有机房医用电梯";
            break;
        case 8:
            return "无机房医用电梯";
            break;
        case 9:
            return "别墅电梯";
            break;
        case 10:
            return "汽车电梯";
            break;
        case 11:
            return "自动扶梯";
            break;
        case 12:
            return "自动人行道";
            break;
        case 13:
            return "立体停车库";
            break;
    }
}

function formartDayType(val, row) {
    switch (parseInt(val)) {
        case 0:
            return "今天";
            break;
        case 1:
            return "明天";
            break;
        case 2:
            return "后天";
            break;
        case 3:
            return "急修";
            break;
    }
}
function formartPrice(val, row) {
    if (val == 0) {
        return "<span style='color:#625052'>待定</span>";
    }
    else {
        return val;
    }
}



//格式化 订单状态 (-2:初始化状态 -1:取消 0:订单创建成功 1:已完成 2:开始行程 3:行程结束)
function formartOrderStatus(val, row) {
    if (val == 0) {
        return "<span style='color:blue'>正在进行</span>";
    }
    else if (val == 1) {
        return "<span style='color:green'>已成功</span>";
    }
    else if (val == -1) {
        return "<span style='color:Red'>已取消</span>";
    }
    else if (val == 2) {
        return "<span style='color:#625052'>等待结束</span>";
    }
    else if (val == 3) {
        return "<span style='color:#625052'>等待付款</span>";
    }
}

//格式化 是 or 否
function formartYesOrNo(val, row) {
    if (val == 1)
        return "<span style='color:green'>是</span>";
    else {
        return "<span style='color:Red'>否</span>";
    }
}

//格式化 0:已发布 5:已锁定 10:签到 15:提交报告 20:签退 25:确认 30:评价
function formartFlowStatus(val, row) {
    if (val == -1) {
        return "<span style='color:Red'>退转</span>";
    }
    else if (val == 0)
        return "已发布";
    else if (val == 5) {
        return "<span style='color:green'>已锁定</span>";
    } else if (val == 10) {
        return "<span style='color:blue'>已签到</span>";
    }
    else if (val == 15) {
        return "<span style='color:blue'>提交报告</span>";
    }
    else if (val == 20) {
        return "<span style='color:blue'>已签退</span>";
    }
    else if (val == 25) {
        return "<span style='color:blue'>已确认</span>";
    }
    else if (val == 30) {
        return "已评价";
    }
}


//格式化 启用 or 禁用
function formartEnableOrDisable(val, row) {
    if (val == 1)
        return "<span style='color:green'>启用</span>";
    else if (val == 0) {
        return "<span style='color:Red'>禁用</span>";
    }
    else if (val == -1) {
        return "<span style='color:silver'>删除</span>";
    } else {
        return "<span style='color:#999999'>已过期</span>";
    }
}
//关联单位状态
function formartRelation(val, row) {
    debugger
    if (val == 1)
        return "<span style='color:green'>已通过</span>";
    else if (val == 0) {
        return "<span style='color:Red'>待审核</span>";
    }
    else if (val == -1) {
        return "<span style='color:silver'>已删除</span>";
    } else {
        return "<span style='color:#999999'>已拒绝</span>";
    }
}

//渲染添加时间
function renderCreateTime(value, metadata, record, rowIdx, colIdx, store) {
    if (value) {
        //起止时间
        value = value.replace(/-/g, "/");
        var date = new Date(value);
        var str = date.format('Y-m-d H:i');
        metadata.attr = 'ext:qtip="' + str + '"';
        return str;
    }
}
//渲染日期
function renderDate(value, metadata, record, rowIdx, colIdx, store) {
    if (value) {
        //起止时间
        value = value.replace(/-/g, "/");
        var date = new Date(value);
        var str = date.format('Y-m-d');
        metadata.attr = 'ext:qtip="' + str + '"';
        return str;
    }
}

//格式化 启用 or 禁用
function formarFlow(val, row) {
    if (val == 1)
        return "<span style='color:green'>已审核</span>";
    else {
        return "<span style='color:Red'>待审核</span>";
    }
}

//格式化null
function IsNull(val, row) {
    if (val)
        return val;
    else {
        return "<span style='color:#7A7A7A'>(暂无)</span>";
    }
}

//格式化null并提示
function IsNullTip(val, metadata, record, rowIndex, columnIndex, store) {
    if (val) {
        metadata.attr = 'ext:qtip="' + val + '"';
        return val;
    }
    else {
        return "<span style='color:#7A7A7A'>(暂无)</span>";
    }
}

//日期格式化到秒
function formartTreeGridTime(val, row) {
    return new Date(formartTime(val)).format('Y-m-d H:i');
}

/*
* ==============公共方法===============*/
//清除html中各种字符
function removeHTMLTag(str) {
    str = str.replace(/<\/?[^>]*>/g, ''); //去除HTML tag
    str = str.replace(/[ | ]*\n/g, '\n'); //去除行尾空白
    //str = str.replace(/\n[\s| | ]*\r/g,'\n'); //去除多余空行
    str = str.replace(/&nbsp;/ig, ''); //去掉&nbsp;
    str = str.replace(/<[^>]+>/g, ""); //
    str = str.replace(/<\/?.+?>/g, "");
    str = str.replace(/&nbsp;/g, ""); //
    return str;
}

//判断是否输入正确的网址  http://www.baidu.com
function isRightUrl(url) {
    var str = url.match(/http:\/\/.+/);
    if (str == null)
        return false;
    else
        return true;
}

//解析文字输入
function AllowTxt(ckstr) {
    return ckstr.replace(/'/g, "''");
}

/*
* ==============系统提示框===============
content:提示内容
flag:提示状态 statusing:right:error
*/
function MessageInfo(content, flag) {
    switch (flag) {
        case "right":
            parent.$('#logout').tip({ width: '240', status: 'right', content: content, dis_time: 1000 }); //操作正确提示
            break;
        case "error":
            top.Ext.Msg.show({ title: "系统提示", msg: content, buttons: Ext.Msg.OK, icon: Ext.MessageBox.INFO });
            //parent.$('#logout').tip({ width: '240', status: 'error', content: content, dis_time: 1000 }); //错误操作提示'
            return false;
            break;
        case "statusing":
            parent.$('#logout').tip({ width: '240', status: 'statusing', content: content, dis_time: 1000 }); //提示操作
            break;
        default:
            parent.$('#logout').tip({ width: '240', status: 'statusing', content: content, dis_time: 1000 });
            break;
    }
}


// 取得中文汉字专为拼音首字母
function codeConvert(str) {
    var returnStr = "";
    var arrRslt = makePy(str);
    if (arrRslt.length > 0) {
        returnStr = arrRslt[0];
    }
    return returnStr;
}
//参数,中文字符串
//返回值:拼音首字母串数组
function makePy(str) {
    if (typeof (str) != "string")
        throw new Error(-1, "函数makePy需要字符串类型参数!");
    var arrResult = new Array(); //保存中间结果的数组
    for (var i = 0, len = str.length; i < len; i++) {
        //获得unicode码
        var ch = str.charAt(i);
        //检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理
        arrResult.push(checkCh(ch));
    }
    //处理arrResult,返回所有可能的拼音首字母串数组
    return mkRslt(arrResult);
}
function checkCh(ch) {
    var uni = ch.charCodeAt(0);
    //如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数
    if (uni > 40869 || uni < 19968)
        return ch; //dealWithOthers(ch);
    //检查是否是多音字,是按多音字处理,不是就直接在strChineseFirstPY字符串中找对应的首字母
    var result = (oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968)));
    return result.toLowerCase();
}
function mkRslt(arr) {
    var arrRslt = [""];
    for (var i = 0, len = arr.length; i < len; i++) {
        var str = arr[i];
        var strlen = str.length;
        if (strlen == 1) {
            for (var k = 0; k < arrRslt.length; k++) {
                arrRslt[k] += str;
            }
        } else {
            var tmpArr = arrRslt.slice(0);
            arrRslt = [];
            for (k = 0; k < strlen; k++) {
                //复制一个相同的arrRslt
                var tmp = tmpArr.slice(0);
                //把当前字符str[k]添加到每个元素末尾
                for (var j = 0; j < tmp.length; j++) {
                    tmp[j] += str.charAt(k);
                }
                //把复制并修改后的数组连接到arrRslt上
                arrRslt = arrRslt.concat(tmp);
            }
        }
    }
    return arrRslt;
}
//取得中文汉字专为拼音首字母
function getPY(s) {
    if (s != "") {
        if (window.navigator.userAgent.indexOf("MSIE") >= 1) {
            execScript("tmp=asc(\"" + s + "\")", "vbscript");
        }
        else {
            window.eval("tmp=asc(\"" + s + "\")");
        }
        tmp = 65536 + tmp;
        var py = "";
        if (tmp >= 45217 && tmp <= 45252) {
            py = "A"
        } else if (tmp >= 45253 && tmp <= 45760) {
            py = "B"
        } else if (tmp >= 45761 && tmp <= 46317) {
            py = "C"
        } else if (tmp >= 46318 && tmp <= 46825) {
            py = "D"
        } else if (tmp >= 46826 && tmp <= 47009) {
            py = "E"
        } else if (tmp >= 47010 && tmp <= 47296) {
            py = "F"
        } else if ((tmp >= 47297 && tmp <= 47613) || (tmp == 63193)) {
            py = "G"
        } else if (tmp >= 47614 && tmp <= 48118) {
            py = "H"
        } else if (tmp >= 48119 && tmp <= 49061) {
            py = "J"
        } else if (tmp >= 49062 && tmp <= 49323) {
            py = "K"
        } else if (tmp >= 49324 && tmp <= 49895) {
            py = "L"
        } else if (tmp >= 49896 && tmp <= 50370) {
            py = "M"
        } else if (tmp >= 50371 && tmp <= 50613) {
            py = "N"
        } else if (tmp >= 50614 && tmp <= 50621) {
            py = "O"
        } else if (tmp >= 50622 && tmp <= 50905) {
            py = "P"
        } else if (tmp >= 50906 && tmp <= 51386) {
            py = "Q"
        } else if (tmp >= 51387 && tmp <= 51445) {
            py = "R"
        } else if (tmp >= 51446 && tmp <= 52217) {
            py = "S"
        } else if (tmp >= 52218 && tmp <= 52697) {
            py = "T"
        } else if (tmp >= 52698 && tmp <= 52979) {
            py = "W"
        } else if (tmp >= 52980 && tmp <= 53688) {
            py = "X"
        } else if (tmp >= 53689 && tmp <= 54480) {
            py = "Y"
        } else if (tmp >= 54481 && tmp <= 62289) {
            py = "Z"
        } else {
            py = s.charAt(0)
        }
        return py
    }
}

/*
* ==============加载页面按钮===============
*   PageName:页面模块名称,栏目配置时候需要填写类名就是这个
*/
function tbar(PageName) {
    //同步查询页面权限按钮
    var tb = new Ext.Toolbar();

    if (PageName != '') {
        //根据类名查询tbar(PageName)类名对应的栏目按钮列表
        var respon = Ext.lib.Ajax.getConnectionObject().conn;
        respon.open("post", "/SysMaster/GetRoleBtn?PageAction=" + PageName, false); //获取页面按钮
        respon.send(null);
        var result = Ext.util.JSON.decode(respon.responseText);
        if (result.success) {
            if (result.msg != "") {
                var result = Ext.util.JSON.decode(result.msg);
                for (var i = 0; i < result.length; i++) {
                    var Name = result[i].Name; //按钮名称
                    var NameTip = result[i].NameTip; //按钮tip
                    var IConName = result[i].IConName; //按钮图标
                    var ActionName = result[i].ActionName; //按钮方法,字符串类型
                    if (i != 0) {//按钮之间的分隔符
                        tb.add('-');
                    }
                    tb.add({
                        text: Name,
                        tooltip: NameTip,
                        id: ActionName,
                        iconCls: IConName,
                        handler: BtnFun(ActionName) //因为是字符串类型,找不到方法,所以需转义一下
                    });
                }
            }
        }
        else {
            if (result.errorCode == 9) {
                top.Ext.Msg.show({
                    title: "信息提示",
                    msg: "用户信息已过期,请重新登录",
                    buttons: Ext.Msg.OK,
                    icon: Ext.MessageBox.INFO,
                    fn: GoOut//退出
                });
                return false;
            }
        }
    }

    //定义的 searchData,可以构建出快捷查询,如果不需要,可以不定义searchData
    if (searchData.length > 0) {
        tb.add('->');
        //查询条件
        var comName = new Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: this.searchData
            }),
            displayField: 'text',
            id: 'comName',
            valueField: 'value',
            mode: 'local',
            selectOnFocus: true,
            forceSelection: true,
            editable: false,
            triggerAction: 'all',
            allowBlank: false,
            value: this.seachkey,
            width: 90,
            listeners: {
                select: function (mysel) {
                    var itemstr = mysel.lastSelectionText;
                    if (itemstr.trim() == "全查询") {
                        Ext.getCmp("comContent").setValue("");
                        Ext.getCmp("comSign").setValue('like');
                    }
                    if (itemstr.indexOf('时间') > -1) {
                        Ext.getCmp("comTimeContent").show();
                        Ext.getCmp("comContent").hide();
                        Ext.getCmp("comEnum").hide();
                        //Ext.getCmp("Attribute").hide();
                        Ext.getCmp("FlowEnum").hide();
                        Ext.getCmp("comSign").setValue('like');
                    }
                    else if (itemstr.indexOf('状态') > -1 && itemstr.length == 2) {
                        Ext.getCmp("comTimeContent").hide();
                        Ext.getCmp("comContent").hide();
                        Ext.getCmp("comEnum").show();
                        Ext.getCmp("FlowEnum").hide();
                        Ext.getCmp("Attribute").hide();
                        Ext.getCmp("comSign").setValue('=');
                    }
                    else if (itemstr.indexOf('审核状态') > -1) {
                        Ext.getCmp("comTimeContent").hide();
                        Ext.getCmp("comContent").hide();
                        Ext.getCmp("comEnum").hide();
                        Ext.getCmp("FlowEnum").show();
                        Ext.getCmp("Attribute").hide();
                        Ext.getCmp("comSign").setValue('=');
                    }
                    else {
                        Ext.getCmp("comTimeContent").hide();
                        Ext.getCmp("comContent").show();
                        Ext.getCmp("comEnum").hide();
                        Ext.getCmp("FlowEnum").hide();
                        Ext.getCmp("comSign").setValue('like');
                    }
                }
            }
        });
        //查询方式
        var comSign = new Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: this.signdata
            }),
            displayField: 'text',
            valueField: 'value',
            mode: 'local',
            id: 'comSign',
            selectOnFocus: true,
            orceSelection: true,
            editable: false,
            triggerAction: 'all',
            allowBlank: false,
            value: 'like',
            width: 60
        });
        //查询内容
        var comContent = new Ext.form.TextField({
            width: 140,
            id: 'comContent',
            emptyText: '请输入搜索条件'
        });
        //查询时间内容
        var comTimeContent = new Ext.form.DateField({
            width: 120,
            id: 'comTimeContent',
            emptyText: '选择时间',
            format: 'Y-m-d',
            hidden: true
        });
        //查询枚举内容
        var comEnum = new Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: [['启用', '1'], ['禁用', '0']]
            }),
            displayField: 'text',
            valueField: 'value',
            mode: 'local',
            id: 'comEnum',
            selectOnFocus: true,
            orceSelection: true,
            editable: false,
            triggerAction: 'all',
            allowBlank: false,
            value: '1',
            hidden: true,
            width: 120
        });
        //查询流程枚举内容 审核状态 -1:退转 0:未启动 1:正在审核中 2:等待开通 3:已完成
        var FlowEnum = new Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: [['退转', '-1'], ['未启动', '0'], ['正在审核中', '1'], ['等待开通', '2'], ['已完成', '3']]
            }),
            displayField: 'text',
            valueField: 'value',
            mode: 'local',
            id: 'FlowEnum',
            selectOnFocus: true,
            orceSelection: true,
            editable: false,
            triggerAction: 'all',
            allowBlank: false,
            value: '0',
            hidden: true,
            width: 120
        });

        tb.add('快捷查询:');
        tb.add(comName);
        tb.add(comSign);
        tb.add(comContent); //文本输入
        tb.add(comTimeContent); //时间框输入
        tb.add(comEnum); //启用 禁用 枚举
        tb.add(FlowEnum); //启用 禁用 枚举

        tb.add([{
            text: '搜索',
            iconCls: 'GTP_search',
            id: 'GTP_search',
            tooltip: '搜索满足条件的数据',
            scope: this,
            handler: function () {
                if (comName.isValid() && comSign.isValid()) {
                    SearchDate();
                }
            }
        }]);
    }

    if (DistinBar != 0) {
        tb.add('->');
        switch (DistinBar) {
            case 1:
                tb.add({
                    text: '待审核',
                    id: 'waitBtn',
                    pressed: true, //设置按钮是否已经被按下，默认是false 
                    handler: function () {
                        treeNodeId = 1;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });

                        if (Ext.getCmp("GoingBtn").pressed == true) {
                            Ext.getCmp("GoingBtn").toggle();
                        }
                        if (Ext.getCmp("ComplateBtn").pressed == true) {
                            Ext.getCmp("ComplateBtn").toggle();
                        }
                        if (Ext.getCmp("waitBtn").pressed == false) {
                            Ext.getCmp("waitBtn").toggle();
                        }
                    }
                });
                tb.add('-');
                tb.add({
                    text: '已受理',
                    id: 'GoingBtn',
                    pressed: false,
                    handler: function () {
                        treeNodeId = 2;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });


                        if (Ext.getCmp("GoingBtn").pressed == false) {
                            Ext.getCmp("GoingBtn").toggle();
                        }
                        if (Ext.getCmp("ComplateBtn").pressed == true) {
                            Ext.getCmp("ComplateBtn").toggle();
                        }
                        if (Ext.getCmp("waitBtn").pressed == true) {
                            Ext.getCmp("waitBtn").toggle();
                        }
                    }
                });
                tb.add('-');
                tb.add({
                    text: '未通过',
                    id: 'ComplateBtn',
                    pressed: false,
                    handler: function () {
                        treeNodeId = 3;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });

                        if (Ext.getCmp("GoingBtn").pressed == true) {
                            Ext.getCmp("GoingBtn").toggle();
                        }
                        if (Ext.getCmp("ComplateBtn").pressed == false) {
                            Ext.getCmp("ComplateBtn").toggle();
                        }
                        if (Ext.getCmp("waitBtn").pressed == true) {
                            Ext.getCmp("waitBtn").toggle();
                        }
                    }
                });
                break;

            case 2: //箱子二维码
               
                tb.add({
                    text: '全部',
                    id: 'OrderSuccess',
                    pressed:true ,
                    handler: function () {
                        treeNodeId =1;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });
                        if (Ext.getCmp("OrderSure").pressed == true) {
                            Ext.getCmp("OrderSure").toggle();
                        }
                        if (Ext.getCmp("OrderSuccess").pressed == false) {
                            Ext.getCmp("OrderSuccess").toggle();
                        }
                        if (Ext.getCmp("OrderIng").pressed == true) {
                            Ext.getCmp("OrderIng").toggle();
                        }
                    }
                });
                tb.add('-');
                tb.add({
                    text: '已绑定',
                    id: 'OrderIng',
                    pressed: false, //设置按钮是否已经被按下，默认是false 
                    handler: function () {
                        treeNodeId = 2;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });
                        if (Ext.getCmp("OrderSure").pressed == true) {
                            Ext.getCmp("OrderSure").toggle();
                        }
                        if (Ext.getCmp("OrderSuccess").pressed == true) {
                            Ext.getCmp("OrderSuccess").toggle();
                        }
                        if (Ext.getCmp("OrderIng").pressed == false) {
                            Ext.getCmp("OrderIng").toggle();
                        }
                    }
                });
                tb.add('-');
                tb.add({
                    text: '未绑定',
                    id: 'OrderSure',
                    pressed: false,
                    handler: function () {
                        treeNodeId = 3;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });
                        if (Ext.getCmp("OrderSure").pressed == false) {
                            Ext.getCmp("OrderSure").toggle();
                        }
                        if (Ext.getCmp("OrderSuccess").pressed == true) {
                            Ext.getCmp("OrderSuccess").toggle();
                        }
                        if (Ext.getCmp("OrderIng").pressed == true) {
                            Ext.getCmp("OrderIng").toggle();
                        }
                    }
                });
                

                break;
            case 3: //提现审核
                tb.add({
                    text: '进行中',
                    id: 'MoneyIng',
                    pressed: true, //设置按钮是否已经被按下，默认是false 
                    handler: function () {
                        treeNodeId = 1;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });

                        if (Ext.getCmp("MoneySure").pressed == true) {
                            Ext.getCmp("MoneySure").toggle();
                        }
                        if (Ext.getCmp("MoneyIng").pressed == false) {
                            Ext.getCmp("MoneyIng").toggle();
                        }
                        if (Ext.getCmp("MoneyBack").pressed == true) {
                            Ext.getCmp("MoneyBack").toggle();
                        }
                    }
                });
                tb.add('-');
                tb.add({
                    text: '已完成',
                    id: 'MoneySure',
                    pressed: false,
                    handler: function () {
                        treeNodeId = 2;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });
                        if (Ext.getCmp("MoneySure").pressed == false) {
                            Ext.getCmp("MoneySure").toggle();
                        }
                        if (Ext.getCmp("MoneyIng").pressed == true) {
                            Ext.getCmp("MoneyIng").toggle();
                        }
                        if (Ext.getCmp("MoneyBack").pressed == true) {
                            Ext.getCmp("MoneyBack").toggle();
                        }
                    }
                });
                tb.add('-');
                tb.add({
                    text: '已驳回',
                    id: 'MoneyBack',
                    pressed: false,
                    handler: function () {
                        treeNodeId = 3;
                        var filestore = Ext.getCmp('gg').getStore();
                        filestore.load({ params: { start: 0, limit: PageSize} });
                        if (Ext.getCmp("MoneySure").pressed == true) {
                            Ext.getCmp("MoneySure").toggle();
                        }
                        if (Ext.getCmp("MoneyIng").pressed == true) {
                            Ext.getCmp("MoneyIng").toggle();
                        }
                        if (Ext.getCmp("MoneyBack").pressed == false) {
                            Ext.getCmp("MoneyBack").toggle();
                        }
                    }
                });
                break;
        }
    }
    return tb;
};

//退出
function GoOut() {
    Ext.Msg.wait('正在注销, 请稍候……'); //出现一个等待条
    Ext.Ajax.request(
        {
            url: '/Home/logOut',
            success: function (response) {
                Ext.Msg.hide();
                parent.window.location.href = "/Home/Login";
            },
            failure: function (response) {
                Ext.Msg.hide();
                parent.window.location.href = "/Home/Login";
            }
        });
}

//针对弹框列表的快捷查看工具条,名称以Top,易记.
function tbarTop() {
    //查询工具条
    var tb = new top.Ext.Toolbar();

    if (TopsearchDate.length > 0) {
        tb.add('->');
        //查询条件
        var comName = new top.Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: this.TopsearchDate
            }),
            displayField: 'text',
            id: 'comName',
            valueField: 'value',
            mode: 'local',
            selectOnFocus: true,
            forceSelection: true,
            editable: true,
            triggerAction: 'all',
            allowBlank: false,
            value: this.seachkey,
            width: 90,
            listeners: {
                select: function (mysel) {
                    var itemstr = mysel.lastSelectionText;
                    if (itemstr.trim() == "全查询") {
                        top.Ext.getCmp("comContent").setValue("");
                    }
                    if (itemstr.indexOf('时间') > -1) {
                        top.Ext.getCmp("comTimeContent").show();
                        top.Ext.getCmp("comContent").hide();
                        top.Ext.getCmp("comEnum").hide();
                    }
                    else if (itemstr.indexOf('状态') > -1) {
                        top.Ext.getCmp("comTimeContent").hide();
                        top.Ext.getCmp("comContent").hide();
                        top.Ext.getCmp("comEnum").show();
                    }
                    else {
                        top.Ext.getCmp("comTimeContent").hide();
                        top.Ext.getCmp("comContent").show();
                        top.Ext.getCmp("comEnum").hide();
                    }
                }
            }
        });
        //查询方式
        var comSign = new top.Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: this.signdata
            }),
            displayField: 'text',
            valueField: 'value',
            mode: 'local',
            id: 'comSign',
            selectOnFocus: true,
            orceSelection: true,
            editable: true,
            triggerAction: 'all',
            allowBlank: false,
            value: 'like',
            width: 60
        });
        //查询内容
        var comContent = new top.Ext.form.TextField({
            width: 120,
            id: 'comContent',
            emptyText: '请输入搜索条件'
        });

        //查询时间内容
        var comTimeContent = new top.Ext.form.DateField({
            width: 120,
            id: 'comTimeContent',
            emptyText: '选择时间',
            format: 'Y-m-d',
            hidden: true
        });

        //查询枚举内容
        var comEnum = new top.Ext.form.ComboBox({
            store: new Ext.data.SimpleStore({
                fields: ['text', 'value'],
                data: [['启用', '1'], ['禁用', '0']]
            }),
            displayField: 'text',
            valueField: 'value',
            mode: 'local',
            id: 'comEnum',
            selectOnFocus: true,
            orceSelection: true,
            editable: true,
            triggerAction: 'all',
            allowBlank: false,
            value: '1',
            hidden: true,
            width: 120
        });


        tb.add('快捷查询:');
        tb.add(comName);
        tb.add(comSign);
        tb.add(comContent);
        tb.add(comTimeContent);
        tb.add(comEnum);

        tb.add([{
            text: '搜索',
            iconCls: 'GTP_search',
            id: 'GTP_search',
            tooltip: '搜索满足条件的数据',
            scope: this,
            handler: function () {
                if (comName.isValid() && comSign.isValid()) {
                    TopSearchDate();
                }
            }
        }]);
    }
    return tb;
};

//通用弹框window
function Window(id, title, formPanel) {
    //弹出窗体
    var win = new top.Ext.Window({
        id: id,
        title: title,
        width: 350,
        minHeight: 200,
        layout: 'fit',
        modal: true,
        shadow: false,
        stateful: false,
        items: formPanel,
        border: false,
        closeAction: 'close',
        buttons: [{
            text: '保存',
            iconCls: 'GTP_save',
            id: 'GTP_save',
            handler: SaveDate
        }, {
            text: '取消',
            iconCls: 'GTP_cancel',
            id: 'GTP_cancel',
            handler: function () {
                top.Ext.getCmp(id).close(); //直接销毁
            }
        }]
    });

    win.addListener('beforeshow', function (o) {
        win.center(); //始终居中显示
    });
    return win;
}
//保存,取消,自定义按钮
function SaveWindowdiy(id, title, formPanel, buttons1) {
    //弹出窗体
    var win = new top.Ext.Window({
        id: id,
        title: title,
        width: 350,
        minHeight: 200,
        layout: 'fit',
        modal: true,
        shadow: false,
        stateful: false,
        items: formPanel,
        border: false,
        closeAction: 'close',
        buttons: [buttons1, {
            text: '保存',
            iconCls: 'GTP_save',
            id: 'GTP_save',
            handler: SaveDate
        }, {
            text: '取消',
            iconCls: 'GTP_cancel',
            id: 'GTP_cancel',
            handler: function () {
                top.Ext.getCmp(id).close(); //直接销毁
            }
        }]
    });

    win.addListener('beforeshow', function (o) {
        win.center(); //始终居中显示
    });
    return win;
}

//自定义弹窗
function WindowDiy(id, title, formPanel, buttons1) {
    var win = new top.Ext.Window({
        id: id,
        title: title,
        width: 350,
        minHeight: 200,
        layout: 'fit',
        modal: true,
        shadow: false,
        stateful: false,
        items: formPanel,
        border: false,
        closeAction: 'close',
        buttons: [buttons1, {
            text: '取消',
            iconCls: 'GTP_cancel',
            id: 'GTP_cancel',
            handler: function () {
                top.Ext.getCmp(id).close(); //直接销毁
            }
        }]
    });

    win.addListener('beforeshow', function (o) {
        win.center(); //始终居中显示
    });
    return win;
}

//调用地图窗口
function WindowMap(x, y) {
    var win = new top.Ext.Window({
        id: 'BaiDuMap',
        title: "地图",
        width: 850,
        height: 458,
        layout: 'fit',
        shadow: false,
        stateful: false,
        border: false,
        modal: true,
        autoScroll: false,
        closeAction: 'close',
        items: {
            autoScroll: true,
            autoLoad: { url: '../../Project/Html/Map.htm', scripts: true, nocache: true },
            params: { x: x, y: y, address: top.Ext.getCmp("Address").getValue() }
        },
        buttons: [{
            text: '确定',
            iconCls: 'GTP_submit',
            handler: function () {
                top.$("#Bx").val(top.$("#x").val());
                top.$("#By").val(top.$("#y").val());
                top.Ext.getCmp("Address").setValue(top.$("#address").val());
                // top.Ext.getCmp("CityName").setValue(top.$("#CityName").val());
                top.Ext.getCmp("BaiDuMap").close(); //直接销毁
            }
        }, {
            text: '取消',
            iconCls: 'GTP_cancel',
            handler: function () {
                top.Ext.getCmp("BaiDuMap").close(); //直接销毁
            }
        }]
    });

    return win;
}

//文件上传,检查文件类型是否定义,如果需要其它文件,可直接扩充
function checkFile(o) {
    //验证图片文件的正则  
    var img_reg = /\.([jJ][pP][gG]){1}$|\.([jJ][pP][eE][gG]){1}$|\.([gG][iI][fF]){1}$|\.([pP][nN][gG]){1}$|\.([bB][mM][pP]){1}$/;
    if (!img_reg.test(o.value)) {
        top.Ext.Msg.show({ title: "信息提示", msg: "文件类型错误,请选择图片文件(jpe/jpeg/gif/png/bmp)", buttons: Ext.Msg.OK, icon: Ext.MessageBox.INFO });
        o.setRawValue('');
        return false;
    }
    return true;
}

//计算文件大小，返回文件大小值，单位K  
function getFileSize(target) {
    var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
    var fs = 0;
    if (isIE && !target.files) {
        var filePath = target.value;
        var fileSystem = new ActiveXObject("Scripting.FileSystemObject");
        var file = fileSystem.GetFile(filePath);
        fs = file.Size;
    } else if (target.files && target.files.length > 0) {
        fs = target.files[0].size;
    } else {
        fs = 0;
    }
    if (fs > 0) {
        fs = fs / 1024;
    }
    return fs;
}

//转义方法
function BtnFun(handlerName) {
    switch (handlerName) {
        case "AddDate": //新增
            return AddDate;
            break;
        case "EditDate": //编辑
            return EditDate;
            break;
        case "DeleteDate": //删除
            return DeleteDate;
            break;
        case "refrushDate": //刷新
            return refrushDate;
            break;
        case "AddSameLevel": //同级新增
            return AddSameLevel;
            break;
        case "AddButtomLevel": //下级新增
            return AddButtomLevel;
            break;
        case "EnableUse": //启用
            return EnableUse;
            break;
        case "DisableUse": //禁用
            return DisableUse;
            break;
        case "ImportDate": //导入
            return ImportDate;
            break;
        case "ExportDate": //导出
            return ExportDate;
            break;
        case "BatchImport": //批量导入
            return BatchImport;
            break;
        case "BatchExport": //批量导出
            return BatchExport;
            break; ;
        case "Adddept": //添加部门
            return Adddept;
            break;
        case "Addpost": //添加职位
            return Addpost;
            break;
        case "GTPAudit": //审核
            return GTPAudit;
            break;
        case "Sendback": //退回
            return Sendback;
            break;
        case "ReSetPassword": //密码重置
            return ReSetPassword;
            break;
        case "DataPrint": //单据打印
            return DataPrint;
            break;
        case "GTPsetagent": //手工组卷
            return GTPsetagent;
            break;
        case "GTPbmsorof": //自动组卷
            return GTPbmsorof;
            break;
        case "Adjustment": //数据库备份
            return Adjustment;
            break;
        case "Revadjustment": //数据库还原
            return Revadjustment;
            break;
        case "GTPdownload": //下载
            return GTPdownload;
            break;
        case "GTPOpinions": //处理
            return GTPOpinions;
            break;
        case "GTPEmpty": //清空
            return GTPEmpty;
            break;
        case "GTPSharedwithme": //派单
            return GTPSharedwithme;
            break;
        case "GTPSynchronization": //同步
            return GTPSynchronization;
            break;
        case "GTPSendback": //退回
            return GTPSendback;
            break;
        case "GTPIntransit": //撤销
            return GTPIntransit;
            break;
        case "GTPBatchimport": //引用
            return GTPBatchimport;
            break;
        case "GTPmoon": //本月
            return GTPmoon;
            break;
        case "GTPNexMon": //上月
            return GTPNexMon;
            break;
        case "GTPDatecustom": //全部
            return GTPDatecustom;
            break;
    }
}

/******按钮方法******/
//高级查询
function SearchDate() {
    var comName = Ext.getCmp("comName").getValue(); //字段名称
    var comSign = Ext.getCmp("comSign").getValue(); //查询方式

    var comContent = Ext.getCmp("comContent").getValue(); //查询值
    var comTimeContent = Ext.getCmp("comTimeContent").value; //查询时间值
    if (!Ext.getCmp("comTimeContent").hidden) {//时间控件
        comContent = comTimeContent;
        //时间列需要转换
        comName = "Convert(varchar(20)," + comName + ",120)";
    }
    else if (!Ext.getCmp("comEnum").hidden)//枚举控件
    {
        comContent = Ext.getCmp("comEnum").getValue();
    }
    else if (Ext.getCmp("OrderStatus") != null)//广告类型
    {
        if (!Ext.getCmp("OrderStatus").hidden) {
            comContent = Ext.getCmp("OrderStatus").getValue();
        }
    }
    if (Ext.getCmp("gg")) {//列表grid
        var _store = Ext.getCmp("gg").store;
        Ext.apply(_store.baseParams, { conditionField: comName, condition: comSign, conditionValue: comContent });
        _store.reload({ params: { start: 0, limit: parseInt(Ext.getCmp("pagesize").getValue())} });
    }
    else if (Ext.getCmp("topgg")) {//表单grid
        var _store = Ext.getCmp("topgg").store;
        Ext.apply(_store.baseParams, { conditionField: comName, condition: comSign, conditionValue: comContent, TypeId: Ext.getCmp("toptree").getSelectionModel().getSelectedNode().id });
        _store.reload({ params: { start: 0, limit: parseInt(Ext.getCmp("pagesize").getValue())} });
    }
}

function reload() {
    if (Ext.getCmp("gg")) {//列表grid
        var _store = Ext.getCmp("gg").store;
        Ext.apply(_store.baseParams);
        _store.reload({ params: { start: 0, limit: parseInt(Ext.getCmp("pagesize").getValue())} });
    }
}

//针对弹框的高级查询
function TopSearchDate() {
    var comName = top.Ext.getCmp("comName").getValue(); //字段名称
    var comSign = top.Ext.getCmp("comSign").getValue(); //查询方式

    var comContent = top.Ext.getCmp("comContent").getValue(); //查询值
    var comTimeContent = top.Ext.getCmp("comTimeContent").getValue(); //查询时间值
    if (!top.Ext.getCmp("comTimeContent").hidden) {//时间控件
        comContent = comTimeContent;
        comName = "Convert(varchar(20)," + comName + ",120)";
    }
    else if (!top.Ext.getCmp("comEnum").hidden)//枚举控件
    {
        comContent = top.Ext.getCmp("comEnum").getValue(); //枚举值;
    }
    if (top.Ext.getCmp("gg")) {
        var _store = top.Ext.getCmp("gg").store;
        Ext.apply(_store.baseParams, { conditionField: comName, condition: comSign, conditionValue: comContent });
        _store.reload({ params: { start: 0, limit: parseInt(top.Ext.getCmp("pagesize").getValue())} });
    }

    if (top.Ext.getCmp("Xianggg")) {
        var _store = top.Ext.getCmp("Xianggg").store;
        Ext.apply(_store.baseParams, { conditionField: comName, condition: comSign, conditionValue: comContent });
        _store.reload({ params: { start: 0, limit: 15} });
    }
}


//grid双击默认进行编辑操作
function dbGridClick(grid, rowindex, e) {
    EditDate();
}

//保存
function SaveDate() {
    MessageInfo('请重写保存方法！', 'statusing');
}

//新增
function AddDate() {
    MessageInfo('请重写新增方法！', 'statusing');
}

//编辑
function EditDate() {
    MessageInfo('请重写编辑方法！', 'statusing');
}

//删除
function DeleteDate() {
    MessageInfo('请重写删除方法！', 'statusing');
}

//刷新
function refrushDate() {
    if (Ext.getCmp("gg")) {
        Ext.getCmp("gg").store.load({ params: { start: 0, limit: parseInt(Ext.getCmp("pagesize").getValue())} });
    }
    else {
        if (Ext.getCmp("tg")) {
            Ext.getCmp("tg").root.reload();
        }
    }
}

//同级新增
function AddSameLevel() {
    MessageInfo('请重写同级新增方法！', 'statusing');
}

//下级新增
function AddButtomLevel() {
    MessageInfo('请重写下级新增方法！', 'statusing');
}

//启用
function EnableUse() {
    MessageInfo('请重写启用方法！', 'statusing');
}

//禁用
function DisableUse() {
    MessageInfo('请重写禁用方法！', 'statusing');
}

//导入
function ImportDate() {
    MessageInfo('请重写导入方法！', 'statusing');
}

//导出
function ExportDate() {
    MessageInfo('请重写导出方法！', 'statusing');
}

//批量导入
function BatchImport() {
    MessageInfo('请重写批量导入方法！', 'statusing');
}

//批量导出
function BatchExport() {
    MessageInfo('请重写批量导出方法！', 'statusing');
}

//审核
function GTPAudit() {
    MessageInfo('请重写审核方法！', 'statusing');
}

//单据打印
function DataPrint() {
    MessageInfo('请重写单据打印方法！', 'statusing');
}

//密码重置
function ReSetPassword() {
    MessageInfo('请重写密码重置方法！', 'statusing');
}

//手工组卷
function GTPsetagent() {
    MessageInfo('请重写手工组卷方法！', 'statusing');
}

//自动组卷
function GTPbmsorof() {
    MessageInfo('请重写自动组卷方法！', 'statusing');
}
//数据库备份
function Adjustment() {
    MessageInfo('请重写备份方法！', 'statusing');
}
//数据库还原
function Revadjustment() {
    MessageInfo('请重写还原方法！', 'statusing');
}

//文件下载
function GTPdownload() {
    MessageInfo('请重写文件下载方法！', 'statusing');
}
//处理
function GTPOpinions() {
    MessageInfo('请重写处理方法！', 'statusing');
}
//清空
function GTPEmpty() {
    MessageInfo('请重写清空方法！', 'statusing');
}
//派单
function GTPSharedwithme() {
    MessageInfo('请重写派单方法！', 'statusing');
}
//同步
function GTPSynchronization() {
    MessageInfo('请重写同步方法！', 'statusing');
}

//流程退回
function GTPSendback() {
    MessageInfo('请重写退回方法！', 'statusing');
}
//流程撤销
function GTPIntransit() {
    MessageInfo('请重写撤销方法！', 'statusing');
}
//引用
function GTPBatchimport() {
    MessageInfo('请重写引用方法！', 'statusing');
}
//本月
function GTPmoon() {
    MessageInfo('请重写引用方法！', 'statusing');
}
//上月
function GTPNexMon() {
    MessageInfo('请重写引用方法！', 'statusing');
}
//全部
function GTPDatecustom() {
    MessageInfo('请重写引用方法！', 'statusing');
}
